abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1,4),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1,4),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1,3),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.5,2.5),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.5,2.5),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.6,2.4),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.6,2.4),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,2.5),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,2.5),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,2.7),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,2.7),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,2.6),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,2.6),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1.3,length(x)),labels=mean.py$prop.y)
rm(list=ls(all=TRUE))
setwd('U:\\independent studies\\modeling rare event deforestation\\simulations')
res1=read.csv('variability betas pos_slope.csv',as.is=T)
unique(res1$n.cc)
unique(res1$n.rs)
mean.py=aggregate(prop.y~b0.true,data=res1,mean)
mean.py$prop.y=round(mean.py$prop.y,3)
#look at convergence
mean(res1$conv.cc) #100%
mean(res1$conv.rs) #100%
#just keep converged results
cond=res1$conv.rs==1 & res1$conv.cc==1
res2=res1[cond,]
#true estimates
z=sort(unique(res2$b0.true))
true.dat=data.frame(b0.true=z,b0=z,b1=NA,prop.y=NA)
#compare estimates from b1.cc and b1.rs
cc=res2[,c('b1.cc','b0.adj.cc','b0.true','prop.y')]
cc$b0.true=cc$b0.true-0.1;
colnames(cc)=c('b1','b0','b0.true','prop.y')
rs=res2[,c('b1.rs','b0.rs','b0.true','prop.y')]
rs$b0.true=rs$b0.true-0.2
colnames(rs)=c('b1','b0','b0.true','prop.y')
#put everything together
fim=rbind(cc,rs,true.dat)
#create figure
png('variability betas figure pos_slope.png',width=1000,height=700)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1.3,length(x)),labels=mean.py$prop.y)
dev.off()
rm(list=ls(all=TRUE))
setwd('U:\\independent studies\\modeling rare event deforestation\\simulations')
res1=read.csv('variability betas.csv',as.is=T)
unique(res1$n.cc)
unique(res1$n.rs)
mean.py=aggregate(prop.y~b0.true,data=res1,mean)
mean.py$prop.y=round(mean.py$prop.y,3)
#look at convergence
mean(res1$conv.cc)
mean(res1$conv.rs)
#just keep converged results
cond=res1$conv.rs==1 & res1$conv.cc==1
res2=res1[cond,]
#true estimates
z=sort(unique(res2$b0.true))
true.dat=data.frame(b0.true=z,b0=z,b1=NA,prop.y=NA)
#compare estimates from b1.cc and b1.rs
cc=res2[,c('b1.cc','b0.adj.cc','b0.true','prop.y')]
cc$b0.true=cc$b0.true-0.1;
colnames(cc)=c('b1','b0','b0.true','prop.y')
rs=res2[,c('b1.rs','b0.rs','b0.true','prop.y')]
rs$b0.true=rs$b0.true-0.2
colnames(rs)=c('b1','b0','b0.true','prop.y')
#put everything together
fim=rbind(cc,rs,true.dat)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-6.8,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-6.8,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(-3,-1),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=-2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(-3,-1),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=12.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(-3,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-6.8,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-6.8,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(-3,-1.7),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=-2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(-3,-1.7),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=12.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(-3,length(x)),labels=mean.py$prop.y)
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-6.8,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-6.8,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(-3,-1.25),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=-2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(-3,-1.25),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=12.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(-3,length(x)),labels=mean.py$prop.y)
rm(list=ls(all=TRUE))
setwd('U:\\independent studies\\modeling rare event deforestation\\simulations')
res1=read.csv('variability betas.csv',as.is=T)
unique(res1$n.cc)
unique(res1$n.rs)
mean.py=aggregate(prop.y~b0.true,data=res1,mean)
mean.py$prop.y=round(mean.py$prop.y,3)
#look at convergence
mean(res1$conv.cc)
mean(res1$conv.rs)
#just keep converged results
cond=res1$conv.rs==1 & res1$conv.cc==1
res2=res1[cond,]
#true estimates
z=sort(unique(res2$b0.true))
true.dat=data.frame(b0.true=z,b0=z,b1=NA,prop.y=NA)
#compare estimates from b1.cc and b1.rs
cc=res2[,c('b1.cc','b0.adj.cc','b0.true','prop.y')]
cc$b0.true=cc$b0.true-0.1;
colnames(cc)=c('b1','b0','b0.true','prop.y')
rs=res2[,c('b1.rs','b0.rs','b0.true','prop.y')]
rs$b0.true=rs$b0.true-0.2
colnames(rs)=c('b1','b0','b0.true','prop.y')
#put everything together
fim=rbind(cc,rs,true.dat)
#create figure
png('variability betas figure.png',width=1000,height=700)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-6.8,-1),
xlab='True b0',ylab='',xaxt='n',main='Estimated b0')
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-6.8,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(-3,-1.25),xlab='True b0',ylab='',main='Estimated b1',xaxt='n')
abline(h=-2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(-3,-1.25),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=12.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(-3,length(x)),labels=mean.py$prop.y)
dev.off()
rm(list=ls(all=TRUE))
setwd('U:\\independent studies\\modeling rare event deforestation\\simulations')
res1=read.csv('variability betas pos_slope.csv',as.is=T)
unique(res1$n.cc)
unique(res1$n.rs)
mean.py=aggregate(prop.y~b0.true,data=res1,mean)
mean.py$prop.y=round(mean.py$prop.y,3)
#look at convergence
mean(res1$conv.cc) #100%
mean(res1$conv.rs) #100%
#just keep converged results
cond=res1$conv.rs==1 & res1$conv.cc==1
res2=res1[cond,]
#true estimates
z=sort(unique(res2$b0.true))
true.dat=data.frame(b0.true=z,b0=z,b1=NA,prop.y=NA)
#compare estimates from b1.cc and b1.rs
cc=res2[,c('b1.cc','b0.adj.cc','b0.true','prop.y')]
cc$b0.true=cc$b0.true-0.1;
colnames(cc)=c('b1','b0','b0.true','prop.y')
rs=res2[,c('b1.rs','b0.rs','b0.true','prop.y')]
rs$b0.true=rs$b0.true-0.2
colnames(rs)=c('b1','b0','b0.true','prop.y')
#put everything together
fim=rbind(cc,rs,true.dat)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab='True b0',ylab='',xaxt='n',main=expression(paste('Estimated',beta[1])))
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab=expression(paste('True ',beta[0])),ylab='',xaxt='n',
main=expression(paste('Estimated ',beta[1])))
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab=expression(paste('True ',beta[0])),ylab='',xaxt='n',
main=expression(paste('Estimated ',beta[0])))
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),
xlab=expression(paste('True ',beta[0])),,ylab='',
main=expression(paste('Estimated ',beta[1])),xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1.3,length(x)),labels=mean.py$prop.y)
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab=expression(paste('True ',beta[0])),ylab='',xaxt='n',
main=expression(paste('Estimated ',beta[0])))
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),
xlab=expression(paste('True ',beta[0])),,ylab='',
main=expression(paste('Estimated ',beta[1])),xaxt='n')
par(mfrow=c(1,2),mar=c(5,3,3,1))
cores=rep(c('black','blue','red'),times=6)
boxplot(b0~b0.true,data=fim,border=cores,ylim=c(-7,-1),
xlab=expression(paste('True ',beta[0])),ylab='',xaxt='n',
main=expression(paste('Estimated ',beta[0])))
axis(side=1,at=seq(from=2,to=18,by=3),labels=z)
abline(v=seq(from=3.5,to=17.5,by=3),col='grey',lty=3)
x=seq(from=2,to=18,by=3)
text(x=x,y=rep(-7,length(x)),labels=mean.py$prop.y)
fim1=fim[!is.na(fim$prop.y),]
cores=rep(c('black','blue'),times=6)
boxplot(b1~b0.true,data=fim1,border=cores,ylim=c(1.3,3),
xlab=expression(paste('True ',beta[0])),ylab='',
main=expression(paste('Estimated ',beta[1])),xaxt='n')
abline(h=2,col='red')
boxplot(b1~b0.true,data=fim1,border=cores,add=T,ylim=c(1.3,3),xaxt='n')
axis(side=1,at=seq(from=2,to=12,by=2),labels=z)
abline(v=seq(from=2.5,to=11.5,by=2),col='grey',lty=3)
x=seq(from=1.5,to=11.5,by=2)
text(x=x,y=rep(1.3,length(x)),labels=mean.py$prop.y)
rm(list=ls(all=TRUE))
set.seed(1)
#Is the estimated variance of beta smaller for case-control than for random sampling?
nsim=100
nobs=100000
n=10000
b0=-c(6:1)
b1=-2
oo=1
res=matrix(NA,nsim*length(b0),11)
for (i in 1:nsim){
print(i)
for (k in 1:length(b0)){
b0a=b0[k]
x=runif(nobs,min=-1,max=1)
tmp=b0a+b1*x
prob=exp(tmp)/(1+exp(tmp)); mean(prob)
y=rbinom(nobs,size=1,prob=prob)
#case-control
ind1=which(y==1)
n1=length(ind1)
if (n1>(n/2)) {ind1=sample(ind1,size=n/2); print('problem')}
ind0=which(y==0)
n0=length(ind0)
ind0=sample(ind0,size=n-length(ind1))
ind=c(ind0,ind1)
dat=data.frame(y=y[ind],x=x[ind])
n.cc=nrow(dat)
#fit model
mod=glm(y~x,data=dat,family='binomial')
betas.cc=mod$coefficients
conv.cc=mod$converged
p0=length(ind0)/n0
p1=length(ind1)/n1
b0.adj.cc=betas.cc[1]-log(p1/p0)
#random sampling
ind=sample(1:nobs,size=n)
dat=data.frame(y=y[ind],x=x[ind])
n.rs=nrow(dat)
mod=glm(y~x,data=dat,family='binomial')
betas.rs=mod$coefficients
conv.rs=mod$converged
res[oo,]=c(betas.cc,conv.cc,
betas.rs,conv.rs,
b0.adj.cc,
b0a,mean(dat$y),n.cc,n.rs)
oo=oo+1
}
}
exp(-1)
rm(list=ls(all=TRUE))
library('MCMCpack')
library('Rcpp')
set.seed(2)
setwd('U:\\GIT_models\\git_LDA_behavior')
source('LDA_behavior_function.R')
source('LDA_behavior_gibbs.R')
sourceCpp('aux1.cpp')
dat=read.csv('fake data.csv',as.is=T)
#prior
gamma1=0.1
alpha=0.1
#prepare for gibbs
ngibbs=1000
nburn=ngibbs/2
ind1=grep('y1',colnames(dat))
ind2=grep('y2',colnames(dat))
nmaxclust=10#max(length(ind1),length(ind2))-1
nobs=nrow(dat)
#separate variables
ind=grep('y1',colnames(dat))
y1=data.matrix(dat[,ind])
b1=length(ind)
ind=grep('y2',colnames(dat))
y2=data.matrix(dat[,ind])
b2=length(ind)
#initial values
phi1=matrix(1/b1,nmaxclust,b1)
phi2=matrix(1/b2,nmaxclust,b2)
theta=matrix(1/nmaxclust,nobs,nmaxclust)
z1.agg=array(NA,dim=c(nobs,b1,nmaxclust))
z2.agg=array(NA,dim=c(nobs,b2,nmaxclust))
for (i in 1:nobs){
for (j in 1:b1){
z1.agg[i,j,]=rmultinom(1,size=y1[i,j],prob=rep(1/nmaxclust,nmaxclust))
}
for (j in 1:b2){
z2.agg[i,j,]=rmultinom(1,size=y2[i,j],prob=rep(1/nmaxclust,nmaxclust))
}
}
#prepare for gibbs
store.phi1=matrix(NA,ngibbs,nmaxclust*b1)
store.phi2=matrix(NA,ngibbs,nmaxclust*b2)
store.theta=matrix(NA,ngibbs,nobs*nmaxclust)
store.loglikel=rep(NA,1)
zeroes1=array(0,c(nobs,b1,nmaxclust))
zeroes2=array(0,c(nobs,b2,nmaxclust))
v=sample.v(z1.agg=z1.agg,z2.agg=z2.agg,gamma1=gamma1,
nobs=nobs,nbehav=nmaxclust)
library(microbenchmark)
microbenchmark(
#sample from FCD's
z1agg=SampleZ1Agg(nobs=nobs,b1=b1,y1=y1, nmaxclust=nmaxclust,
lphi1=log(phi1),ltheta=log(theta),zeroes=zeroes1),
z2agg=SampleZ2Agg(nobs=nobs,b2=b2,y2=y2, nmaxclust=nmaxclust,
lphi2=log(phi2),ltheta=log(theta),zeroes=zeroes2),
v=sample.v(z1.agg=z1.agg,z2.agg=z2.agg,gamma1=gamma1,
nobs=nobs,nbehav=nmaxclust),
theta=get.theta(v=v,nbehav=nmaxclust,nobs=nobs),
phi1=sample.phi1(z1.agg=z1.agg,alpha=alpha,nbehav=nmaxclust,b1=b1),
phi2=sample.phi2(z2.agg=z2.agg,alpha=alpha,nbehav=nmaxclust,b2=b2)
)
